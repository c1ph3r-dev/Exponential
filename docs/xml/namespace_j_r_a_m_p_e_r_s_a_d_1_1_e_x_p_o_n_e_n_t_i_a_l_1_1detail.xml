<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespace_j_r_a_m_p_e_r_s_a_d_1_1_e_x_p_o_n_e_n_t_i_a_l_1_1detail" kind="namespace" language="C++">
    <compoundname>JRAMPERSAD::EXPONENTIAL::detail</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="_exponential_8h_1a18e931aadf93c46a7d2a70240273b744" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T JRAMPERSAD::EXPONENTIAL::detail::ABS</definition>
        <argsstring>(const T &amp;n) noexcept</argsstring>
        <name>ABS</name>
        <qualifiedname>JRAMPERSAD::EXPONENTIAL::detail::ABS</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Exponential/Exponential.h" line="39" column="4" bodyfile="Exponential/Exponential.h" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="_exponential_8h_1ad8c0061f5d379beb5478b7a0b73325b4" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T JRAMPERSAD::EXPONENTIAL::detail::NEGATE</definition>
        <argsstring>(const T &amp;n) noexcept</argsstring>
        <name>NEGATE</name>
        <qualifiedname>JRAMPERSAD::EXPONENTIAL::detail::NEGATE</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Exponential/Exponential.h" line="45" column="4" bodyfile="Exponential/Exponential.h" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="_exponential_8h_1a2bac2791c00b5a563a7bf60c422e9709" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T JRAMPERSAD::EXPONENTIAL::detail::POW</definition>
        <argsstring>(const T &amp;n, const int &amp;exp) noexcept</argsstring>
        <name>POW</name>
        <qualifiedname>JRAMPERSAD::EXPONENTIAL::detail::POW</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>exp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Exponential/Exponential.h" line="51" column="4" bodyfile="Exponential/Exponential.h" bodystart="51" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="_exponential_8h_1a151665afe2284333a8407d99721a823d" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T JRAMPERSAD::EXPONENTIAL::detail::SUM</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;vec) noexcept</argsstring>
        <name>SUM</name>
        <qualifiedname>JRAMPERSAD::EXPONENTIAL::detail::SUM</qualifiedname>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Exponential/Exponential.h" line="66" column="4" bodyfile="Exponential/Exponential.h" bodystart="66" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="_exponential_8h_1a70f3fa407240a86fc80a12e0bfb161b1" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T JRAMPERSAD::EXPONENTIAL::detail::MEDIAN</definition>
        <argsstring>(std::vector&lt; T &gt; vec) noexcept</argsstring>
        <name>MEDIAN</name>
        <qualifiedname>JRAMPERSAD::EXPONENTIAL::detail::MEDIAN</qualifiedname>
        <param>
          <type>std::vector&lt; T &gt;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Exponential/Exponential.h" line="75" column="4" bodyfile="Exponential/Exponential.h" bodystart="75" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="_exponential_8h_1a8b5d80226dd572f405a738362a65d42a" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double JRAMPERSAD::EXPONENTIAL::detail::MEAN</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;vec) noexcept</argsstring>
        <name>MEAN</name>
        <qualifiedname>JRAMPERSAD::EXPONENTIAL::detail::MEAN</qualifiedname>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Exponential/Exponential.h" line="88" column="9" bodyfile="Exponential/Exponential.h" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="_exponential_8h_1af8429cc7e6d21e47d3aabcf82fea1b61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void JRAMPERSAD::EXPONENTIAL::detail::SortASC</definition>
        <argsstring>(std::vector&lt; T &gt; &amp;vec)</argsstring>
        <name>SortASC</name>
        <qualifiedname>JRAMPERSAD::EXPONENTIAL::detail::SortASC</qualifiedname>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Exponential/Exponential.h" line="94" column="7" bodyfile="Exponential/Exponential.h" bodystart="94" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="_exponential_8h_1a4bce0c855a68d504f23c7c1cfd4314ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void JRAMPERSAD::EXPONENTIAL::detail::SortDESC</definition>
        <argsstring>(std::vector&lt; T &gt; &amp;vec)</argsstring>
        <name>SortDESC</name>
        <qualifiedname>JRAMPERSAD::EXPONENTIAL::detail::SortDESC</qualifiedname>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Exponential/Exponential.h" line="105" column="7" bodyfile="Exponential/Exponential.h" bodystart="105" bodyend="113"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Exponential/Exponential.h" line="36" column="1"/>
  </compounddef>
</doxygen>
